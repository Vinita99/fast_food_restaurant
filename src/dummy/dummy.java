package dummy;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

//import sun.util.logging;
import javax.swing.JOptionPane;
import java.awt.FlowLayout;  
import javax.swing.JButton;  
import javax.swing.JFrame;  
import javax.swing.JLabel;  
import javax.swing.JPanel;
import java.awt.event.*; 
import javax.swing.*;
import java.awt.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
 

/**
 *
 * @author KOTRESHA
 */
public class dummy extends javax.swing.JFrame {
    double price_salad=20.0;
    double price_onionrings=30.0;
    double price_burger=40.0;
    double price_pizza=70.0;
    double price_cheeserolls=20.0;
    double price_manchuria=30.0;
    double price_vegnoodles=30.0;
    double price_chickennoodles=30.0;
    double price_tea=10.0;
    double price_cola=10.0;
    double price_water=10.0;
    double price_chocolate=30.0;
    double price_vanilla=30.0;
    double taxrate=6.0;
    double itax,itotal,isubtotal,ichange,icost,icash,t,c;
    double itemcost[]=new double[13];
    String csubtotal,ctax,ctotal,cchange,unme,balance;
    
    

    /**
     * Creates new form dummy
     */
    public dummy() {
        initComponents();
    }
    //This is contructor is used to retreive the username and balance from login or registration form.
    public dummy(String para,String para1)
    {
        initComponents();
        lbalance.setText(para);
        unme=para1;
       // balance=para;
        
        
    }
    //This constructor is used to retreive the selected items from billing form. This contructor is only
    //called when user wants to return back to dummy from billing form.
    public dummy(String bal,String text, String text0, String text1, String text2, String text3, String text4, String text5, String text6, String text7, String text8, String text9, String text10, String text11) {
        initComponents();
        lbalance.setText(bal);
        if(text!="0")
        {
            csalad.isSelected();
            salad.setEnabled(true);
            salad.setText(text);
        }
        if(text0!="0")
        {
            conionrings.isSelected();
            onionrings.setEnabled(true);
            onionrings.setText(text0);
        }
        if(text1!="0")
        {
            cburger.isSelected();
            burger.setEnabled(true);
            burger.setText(text1);
        }
        if(text2!="0")
        {
            cpizza.isSelected();
            pizza.setEnabled(true);
            pizza.setText(text2);
        }
        if(text3!="0")
        {
            ccheeserolls.isSelected();
            cheeserolls.setEnabled(true);
            cheeserolls.setText(text3);
        }
        if(text4!="0")
        {
            cmanchuria.isSelected();
            manchuria.setEnabled(true);
            manchuria.setText(text4);
        }
        if(text5!="0")
        {
            cvegnoodles.isSelected();
            vegnoodles.setEnabled(true);
            vegnoodles.setText(text5);
        }
        if(text6!="0")
        {
            cchickennoodles.isSelected();
            chickennoodles.setEnabled(true);
            chickennoodles.setText(text5);
        }
        if(text7!="0")
        {
            ctea.isSelected();
            tea.setEnabled(true);
            tea.setText(text7);
        }
        if(text8!="0")
        {
            ccola.isSelected();
            cola.setEnabled(true);
            cola.setText(text8);
        }
        if(text9!="0")
        {
            cwater.isSelected();
            water.setEnabled(true);
            water.setText(text9);
        }
        if(text10!="0")
        {
            cchocolate.isSelected();
            chocolate.setEnabled(true);
            chocolate.setText(text10);
        }
        if(text11!="0")
        {
            cvanilla.isSelected();
            vanilla.setEnabled(true);
            vanilla.setText(text11);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cvanilla = new javax.swing.JCheckBox();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        csalad = new javax.swing.JCheckBox();
        conionrings = new javax.swing.JCheckBox();
        cburger = new javax.swing.JCheckBox();
        cpizza = new javax.swing.JCheckBox();
        ccheeserolls = new javax.swing.JCheckBox();
        cmanchuria = new javax.swing.JCheckBox();
        cvegnoodles = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        cchickennoodles = new javax.swing.JCheckBox();
        ctea = new javax.swing.JCheckBox();
        ccola = new javax.swing.JCheckBox();
        cwater = new javax.swing.JCheckBox();
        cchocolate = new javax.swing.JCheckBox();
        vanilla = new javax.swing.JTextField();
        salad = new javax.swing.JTextField();
        chickennoodles = new javax.swing.JTextField();
        burger = new javax.swing.JTextField();
        pizza = new javax.swing.JTextField();
        cheeserolls = new javax.swing.JTextField();
        tea = new javax.swing.JTextField();
        cola = new javax.swing.JTextField();
        water = new javax.swing.JTextField();
        chocolate = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cash = new javax.swing.JTextField();
        onionrings = new javax.swing.JTextField();
        manchuria = new javax.swing.JTextField();
        vegnoodles = new javax.swing.JTextField();
        total = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        change = new javax.swing.JTextField();
        tax = new javax.swing.JTextField();
        subtotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbalance = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        pay = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 153));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cvanilla.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cvanilla.setText("vanilla");
        cvanilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvanillaActionPerformed(evt);
            }
        });
        getContentPane().add(cvanilla, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 600, -1, -1));

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CASH", "BALANCE" }));
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 520, 130, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 470, 350, 340));

        jLabel3.setFont(new java.awt.Font("Cambria Math", 1, 48)); // NOI18N
        jLabel3.setText("                                          FAST FOOD RESTAURANT");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 1720, 100));

        csalad.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        csalad.setText("salad");
        csalad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                csaladActionPerformed(evt);
            }
        });
        getContentPane().add(csalad, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 290, -1, -1));

        conionrings.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        conionrings.setText("onion rings");
        conionrings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                conionringsActionPerformed(evt);
            }
        });
        getContentPane().add(conionrings, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 360, -1, -1));

        cburger.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cburger.setText("burger");
        cburger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cburgerActionPerformed(evt);
            }
        });
        getContentPane().add(cburger, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, -1, -1));

        cpizza.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cpizza.setText("pizza");
        cpizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpizzaActionPerformed(evt);
            }
        });
        getContentPane().add(cpizza, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 490, -1, -1));

        ccheeserolls.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ccheeserolls.setText("cheese rolls");
        ccheeserolls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccheeserollsActionPerformed(evt);
            }
        });
        getContentPane().add(ccheeserolls, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 550, -1, -1));

        cmanchuria.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cmanchuria.setText("manchuria");
        cmanchuria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmanchuriaActionPerformed(evt);
            }
        });
        getContentPane().add(cmanchuria, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 260, -1, -1));

        cvegnoodles.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cvegnoodles.setText("veg noodles");
        cvegnoodles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cvegnoodlesActionPerformed(evt);
            }
        });
        getContentPane().add(cvegnoodles, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 320, -1, -1));

        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, 520, 300));

        cchickennoodles.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cchickennoodles.setText("chicken noodles");
        cchickennoodles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cchickennoodlesActionPerformed(evt);
            }
        });
        getContentPane().add(cchickennoodles, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 380, -1, -1));

        ctea.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ctea.setText("tea");
        ctea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cteaActionPerformed(evt);
            }
        });
        getContentPane().add(ctea, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 240, -1, -1));

        ccola.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        ccola.setText("cola");
        ccola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ccolaActionPerformed(evt);
            }
        });
        getContentPane().add(ccola, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 290, -1, -1));

        cwater.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cwater.setText("water bottle");
        cwater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cwaterActionPerformed(evt);
            }
        });
        getContentPane().add(cwater, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 350, -1, -1));

        cchocolate.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cchocolate.setText("chocolate");
        cchocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cchocolateActionPerformed(evt);
            }
        });
        getContentPane().add(cchocolate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1420, 540, -1, 40));

        vanilla.setText("0");
        vanilla.setEnabled(false);
        vanilla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vanillaActionPerformed(evt);
            }
        });
        vanilla.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vanillaKeyTyped(evt);
            }
        });
        getContentPane().add(vanilla, new org.netbeans.lib.awtextra.AbsoluteConstraints(1630, 610, 60, 20));

        salad.setText("0");
        salad.setEnabled(false);
        salad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saladActionPerformed(evt);
            }
        });
        salad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                saladKeyTyped(evt);
            }
        });
        getContentPane().add(salad, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 70, -1));

        chickennoodles.setText("0");
        chickennoodles.setEnabled(false);
        chickennoodles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chickennoodlesActionPerformed(evt);
            }
        });
        chickennoodles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chickennoodlesKeyTyped(evt);
            }
        });
        getContentPane().add(chickennoodles, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 380, 70, 30));

        burger.setText("0");
        burger.setEnabled(false);
        burger.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                burgerActionPerformed(evt);
            }
        });
        burger.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                burgerKeyTyped(evt);
            }
        });
        getContentPane().add(burger, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 420, 70, -1));

        pizza.setText("0");
        pizza.setEnabled(false);
        pizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pizzaActionPerformed(evt);
            }
        });
        pizza.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pizzaKeyTyped(evt);
            }
        });
        getContentPane().add(pizza, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 490, 70, -1));

        cheeserolls.setText("0");
        cheeserolls.setEnabled(false);
        cheeserolls.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cheeserollsActionPerformed(evt);
            }
        });
        cheeserolls.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cheeserollsKeyTyped(evt);
            }
        });
        getContentPane().add(cheeserolls, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 550, 70, -1));

        tea.setText("0");
        tea.setEnabled(false);
        tea.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teaActionPerformed(evt);
            }
        });
        tea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                teaKeyTyped(evt);
            }
        });
        getContentPane().add(tea, new org.netbeans.lib.awtextra.AbsoluteConstraints(1630, 240, 70, -1));

        cola.setText("0");
        cola.setEnabled(false);
        cola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colaActionPerformed(evt);
            }
        });
        cola.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                colaKeyTyped(evt);
            }
        });
        getContentPane().add(cola, new org.netbeans.lib.awtextra.AbsoluteConstraints(1630, 290, 70, -1));

        water.setText("0");
        water.setEnabled(false);
        water.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                waterActionPerformed(evt);
            }
        });
        water.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                waterKeyTyped(evt);
            }
        });
        getContentPane().add(water, new org.netbeans.lib.awtextra.AbsoluteConstraints(1630, 350, 70, -1));

        chocolate.setText("0");
        chocolate.setEnabled(false);
        chocolate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chocolateActionPerformed(evt);
            }
        });
        chocolate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                chocolateKeyTyped(evt);
            }
        });
        getContentPane().add(chocolate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1630, 540, 60, -1));

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("exit");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton1MouseExited(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 730, -1, -1));

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("total");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jButton2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jButton2MouseExited(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 650, -1, -1));

        cash.setText("0");
        cash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cashActionPerformed(evt);
            }
        });
        cash.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cashKeyTyped(evt);
            }
        });
        getContentPane().add(cash, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 600, 130, 40));

        onionrings.setText("0");
        onionrings.setEnabled(false);
        onionrings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onionringsActionPerformed(evt);
            }
        });
        onionrings.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                onionringsKeyTyped(evt);
            }
        });
        getContentPane().add(onionrings, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 360, 70, -1));

        manchuria.setText("0");
        manchuria.setEnabled(false);
        manchuria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manchuriaActionPerformed(evt);
            }
        });
        manchuria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                manchuriaKeyTyped(evt);
            }
        });
        getContentPane().add(manchuria, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 260, 70, 30));

        vegnoodles.setText("0");
        vegnoodles.setEnabled(false);
        vegnoodles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vegnoodlesActionPerformed(evt);
            }
        });
        vegnoodles.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                vegnoodlesKeyTyped(evt);
            }
        });
        getContentPane().add(vegnoodles, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 320, 70, 30));

        total.setEnabled(false);
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        getContentPane().add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 680, 110, 30));

        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, 360, 340));

        change.setEnabled(false);
        getContentPane().add(change, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 500, 110, 30));

        tax.setEnabled(false);
        getContentPane().add(tax, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 560, 110, 30));

        subtotal.setEnabled(false);
        getContentPane().add(subtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 620, 110, 30));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("total");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 680, 80, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("change");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 500, 80, 30));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("tax");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 560, 80, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setText("sub total");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 620, 80, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setText("PAYMENT METHOD");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 470, 250, 50));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("DRINKS");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 170, 260, 40));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel13.setText("ICECREAM");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1410, 440, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel14.setText("SNACKS");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, -1, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setText("FAST FOOD");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 180, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Enter Cash:");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 570, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 0, 102));
        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1860, 150));

        jLabel17.setBackground(new java.awt.Color(0, 0, 0));
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        getContentPane().add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(1360, 150, 440, 640));

        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 150, 430, 630));

        lbalance.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbalance.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(153, 153, 153), 1, true));
        getContentPane().add(lbalance, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 740, 110, 30));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Current balance");
        getContentPane().add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 750, -1, -1));

        pay.setBackground(new java.awt.Color(204, 204, 204));
        pay.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        pay.setText("Pay");
        pay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                payMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                payMouseExited(evt);
            }
        });
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });
        getContentPane().add(pay, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 690, 110, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cvanillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvanillaActionPerformed
        // if the checkbox is selected then the corresponding item is allowed to be selected otherwise not.
        //if the payment mode is 'cash' only then the cash textfield is allowed to be written on.
        if(cvanilla.isSelected())
        {vanilla.setEnabled(true);
        vanilla.requestFocus();
        vanilla.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {vanilla.setEnabled(false);
        vanilla.setText("0");}
    }//GEN-LAST:event_cvanillaActionPerformed

    private void csaladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_csaladActionPerformed
        // TODO add your handling code here:
        if(csalad.isSelected())
        {salad.setEnabled(true);
        salad.requestFocus();
        salad.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash"){
            cash.setEnabled(true);
        }
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {salad.setEnabled(false);
        salad.setText("0");
        }
    }//GEN-LAST:event_csaladActionPerformed

    private void conionringsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_conionringsActionPerformed
        // TODO add your handling code here:
       if(conionrings.isSelected())
        {onionrings.setEnabled(true);
        onionrings.requestFocus();
        onionrings.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);
        
        }
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {onionrings.setEnabled(false);
        onionrings.setText("0");
        } 
    }//GEN-LAST:event_conionringsActionPerformed

    private void cburgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cburgerActionPerformed
        // TODO add your handling code here:
        if(cburger.isSelected())
        {burger.setEnabled(true);
        burger.requestFocus();
        burger.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);
        
        }
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {burger.setEnabled(false);
        burger.setText("0");
        }
    }//GEN-LAST:event_cburgerActionPerformed

    private void cpizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpizzaActionPerformed
        // TODO add your handling code here:
        if(cpizza.isSelected())
        {pizza.setEnabled(true);
        pizza.requestFocus();
        pizza.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {pizza.setEnabled(false);
        pizza.setText("0");
        }
    }//GEN-LAST:event_cpizzaActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String paymentM=(String)jComboBox1.getSelectedItem();
        if(paymentM=="BALANCE")
        {cash.setEnabled(false);
        
        }
        else
        {cash.setEnabled(true);
        
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void ccheeserollsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccheeserollsActionPerformed
        // TODO add your handling code here:
        if(ccheeserolls.isSelected())
        {cheeserolls.setEnabled(true);
        cheeserolls.requestFocus();
        cheeserolls.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {cheeserolls.setEnabled(false);
        cheeserolls.setText("0");
        }
    }//GEN-LAST:event_ccheeserollsActionPerformed

    private void cmanchuriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmanchuriaActionPerformed
        // TODO add your handling code here:
        if(cmanchuria.isSelected())
        {manchuria.setEnabled(true);
        manchuria.requestFocus();
        manchuria.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {manchuria.setEnabled(false);
        manchuria.setText("0");
        }
    }//GEN-LAST:event_cmanchuriaActionPerformed

    private void cvegnoodlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cvegnoodlesActionPerformed
        // TODO add your handling code here:
        if(cvegnoodles.isSelected())
        {vegnoodles.setEnabled(true);
        vegnoodles.requestFocus();
        vegnoodles.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {vegnoodles.setEnabled(false);
        vegnoodles.setText("0");
        }
    }//GEN-LAST:event_cvegnoodlesActionPerformed

    private void cchickennoodlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cchickennoodlesActionPerformed
        // TODO add your handling code here:
        if(cchickennoodles.isSelected())
        {chickennoodles.setEnabled(true);
        chickennoodles.requestFocus();
        chickennoodles.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {chickennoodles.setEnabled(false);
        chickennoodles.setText("0");}
    }//GEN-LAST:event_cchickennoodlesActionPerformed

    private void cteaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cteaActionPerformed
        // TODO add your handling code here:
        if(ctea.isSelected())
        {tea.setEnabled(true);
        tea.requestFocus();
        tea.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {tea.setEnabled(false);
        tea.setText("0");}
    }//GEN-LAST:event_cteaActionPerformed

    private void ccolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ccolaActionPerformed
        // TODO add your handling code here:
        if(ccola.isSelected())
        {cola.setEnabled(true);
        cola.requestFocus();
        cola.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {cola.setEnabled(false);
        cola.setText("0");
        }
    }//GEN-LAST:event_ccolaActionPerformed

    private void cwaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cwaterActionPerformed
        // TODO add your handling code here:
        if(cwater.isSelected())
        {water.setEnabled(true);
        water.requestFocus();
        water.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash")
        {cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {water.setEnabled(false);
        water.setText("0");
        }
    }//GEN-LAST:event_cwaterActionPerformed

    private void cchocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cchocolateActionPerformed
        // TODO add your handling code here:
        if(cchocolate.isSelected())
        {chocolate.setEnabled(true);
        chocolate.requestFocus();
        chocolate.setText("");
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="cash"){
        cash.setEnabled(true);}
        //change.setEnabled(true);
        //total.setEnabled(true);
        //tax.setEnabled(true);
        //subtotal.setEnabled(true);
        }
        else
        {chocolate.setEnabled(false);
        chocolate.setText("0");
        }
    }//GEN-LAST:event_cchocolateActionPerformed
private JFrame frame;
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // To exit from the program when 'exit' button is pressed.
        frame=new JFrame("exit");
        if(JOptionPane.showConfirmDialog(frame,"confirm you wanna exit?","fast food",JOptionPane.YES_NO_OPTION)==JOptionPane.YES_NO_OPTION){
            System.exit(0);
        }
    }//GEN-LAST:event_jButton1ActionPerformed
private JFrame frame1;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Here we retrieve the selected items and calculate tax, subtotal, and total.
        //If the mode of payment in cash then we make sure that entered cash is sufficient.
        
        
        itemcost[0]=Double.parseDouble(salad.getText());
        itemcost[1]=Double.parseDouble(onionrings.getText());
        itemcost[2]=Double.parseDouble(burger.getText());
        itemcost[3]=Double.parseDouble(pizza.getText());
        itemcost[4]=Double.parseDouble(cheeserolls.getText());
        itemcost[5]=Double.parseDouble(manchuria.getText());
        itemcost[6]=Double.parseDouble(vegnoodles.getText());
        itemcost[7]=Double.parseDouble(chickennoodles.getText());
        itemcost[8]=Double.parseDouble(tea.getText());
        itemcost[9]=Double.parseDouble(cola.getText());
        itemcost[10]=Double.parseDouble(water.getText());
        itemcost[11]=Double.parseDouble(chocolate.getText());
        itemcost[12]=Double.parseDouble(vanilla.getText());
        
        String paymentMethod=(String)jComboBox1.getSelectedItem();
        if(paymentMethod=="CASH")
            {icash=Double.parseDouble(cash.getText());
            isubtotal=(itemcost[0]*price_salad)+(itemcost[1]*price_onionrings)+(itemcost[2]*price_burger)+(itemcost[3]*price_pizza)+(itemcost[4]*price_cheeserolls)+(itemcost[5]*price_manchuria)+(itemcost[6]*price_vegnoodles)+(itemcost[7]*price_chickennoodles)+(itemcost[8]*price_tea)+(itemcost[9]*price_cola)+(itemcost[10]*price_water)+(itemcost[11]*price_chocolate)+(itemcost[12]*price_vanilla);
            itax=(isubtotal*taxrate)/100;
            ctax=String.format("%.2f/-",itax);
            tax.setEnabled(true);
            tax.setText(ctax);
        
            csubtotal=String.format("%.2f/-",isubtotal);
            subtotal.setEnabled(true);
            subtotal.setText(csubtotal);
        
            itotal=(isubtotal+itax);
            ctotal=String.format("%.2f/-",itotal);
            total.setEnabled(true);
            total.setText(ctotal);
        
            if(icash>itotal)
                {ichange=icash-itotal;
                cchange=String.format("%.2f/-",ichange);
                change.setEnabled(true);
                change.setText(cchange);
                }
            else if(icash==itotal)
                {change.setEnabled(true);
                change.setText("0");
                }
            else
                {frame1=new JFrame("confirm");
                    JOptionPane.showMessageDialog(null,"ENTER ENOUGH CASH", "FAST FOOD ", JOptionPane.OK_OPTION);
               }
            }
        else
        {
            isubtotal=(itemcost[0]*price_salad)+(itemcost[1]*price_onionrings)+(itemcost[2]*price_burger)+(itemcost[3]*price_pizza)+(itemcost[4]*price_cheeserolls)+(itemcost[5]*price_manchuria)+(itemcost[6]*price_vegnoodles)+(itemcost[7]*price_chickennoodles)+(itemcost[8]*price_tea)+(itemcost[9]*price_cola)+(itemcost[10]*price_water)+(itemcost[11]*price_chocolate)+(itemcost[12]*price_vanilla);
            itax=(isubtotal*taxrate)/100;
            ctax=String.format("%.2f/-",itax);
            tax.setEnabled(true);
            tax.setText(ctax);
        
            csubtotal=String.format("%.2f/-",isubtotal);
            subtotal.setEnabled(true);
            subtotal.setText(csubtotal);
        
            itotal=(isubtotal+itax);
            ctotal=String.format("%.2f/-",itotal);
            total.setEnabled(true);
            total.setText(ctotal);
            change.setEnabled(true);
            change.setText("0");
            //frame1=new JFrame("payment");
            //JOptionPane.showMessageDialog(null,"CLICK YES TO CONTINUE PAYMENT "+paymentMethod, "FAST FOOD ", JOptionPane.YES_NO_OPTION);
            
        }
        
        
        
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void saladActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saladActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saladActionPerformed

    private void chickennoodlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chickennoodlesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chickennoodlesActionPerformed

    private void pizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pizzaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pizzaActionPerformed

    private void manchuriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manchuriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_manchuriaActionPerformed

    private void vegnoodlesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vegnoodlesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vegnoodlesActionPerformed

    private void saladKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_saladKeyTyped
        // TO not let user enter any invalid input i.e., characters,backspace or delete.
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
        
    }//GEN-LAST:event_saladKeyTyped

    private void onionringsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onionringsKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_onionringsKeyTyped

    private void burgerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_burgerKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_burgerKeyTyped

    private void pizzaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pizzaKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_pizzaKeyTyped

    private void cheeserollsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cheeserollsKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_cheeserollsKeyTyped

    private void manchuriaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_manchuriaKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_manchuriaKeyTyped

    private void vegnoodlesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vegnoodlesKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_vegnoodlesKeyTyped

    private void chickennoodlesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chickennoodlesKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_chickennoodlesKeyTyped

    private void teaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_teaKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_teaKeyTyped

    private void colaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_colaKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_colaKeyTyped

    private void waterKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_waterKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_waterKeyTyped

    private void chocolateKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_chocolateKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_chocolateKeyTyped

    private void vanillaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vanillaKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
    }//GEN-LAST:event_vanillaKeyTyped
private JFrame frame2;
    private void cashKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cashKeyTyped
        // TODO add your handling code here:
        char iNumber=evt.getKeyChar();
        if(!(Character.isDigit(iNumber))||(iNumber==KeyEvent.VK_BACK_SPACE)||(iNumber==KeyEvent.VK_DELETE))
        {evt.consume();
        }
        else
        {cash.requestFocus();
        }
        
    }//GEN-LAST:event_cashKeyTyped

    private void cheeserollsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cheeserollsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cheeserollsActionPerformed

    private void burgerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_burgerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_burgerActionPerformed

    private void vanillaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vanillaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vanillaActionPerformed

    private void chocolateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chocolateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chocolateActionPerformed

    private void waterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_waterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_waterActionPerformed

    private void colaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colaActionPerformed

    private void teaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_teaActionPerformed

    private void cashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cashActionPerformed
        
        
    }//GEN-LAST:event_cashActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jButton2MouseClicked

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalActionPerformed

    private void onionringsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onionringsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_onionringsActionPerformed

    private void jButton2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseEntered
        // TODO add your handling code here:
        jButton2.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_jButton2MouseEntered

    private void jButton2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseExited
        // TODO add your handling code here:
        jButton2.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_jButton2MouseExited

    private void jButton1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseEntered
        // TODO add your handling code here:
        jButton1.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_jButton1MouseEntered

    private void jButton1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseExited
        // TODO add your handling code here:
        jButton1.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_jButton1MouseExited

    private void payMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payMouseEntered
        // TODO add your handling code here:
        pay.setBackground(new Color(255,255,255));
    }//GEN-LAST:event_payMouseEntered

    private void payMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_payMouseExited
        // TODO add your handling code here:
        pay.setBackground(new Color(204,204,204));
    }//GEN-LAST:event_payMouseExited
private JFrame frame3;
    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
        // Here we calculate the total amount, tax and subtotal.
        //We also pass the number of items selected and their prices individually to the billing contructor.
        
        
         isubtotal=(itemcost[0]*price_salad)+(itemcost[1]*price_onionrings)+(itemcost[2]*price_burger)+(itemcost[3]*price_pizza)+(itemcost[4]*price_cheeserolls)+(itemcost[5]*price_manchuria)+(itemcost[6]*price_vegnoodles)+(itemcost[7]*price_chickennoodles)+(itemcost[8]*price_tea)+(itemcost[9]*price_cola)+(itemcost[10]*price_water)+(itemcost[11]*price_chocolate)+(itemcost[12]*price_vanilla);
         itax=(isubtotal*taxrate)/100;
         itotal=(isubtotal+itax);
         csubtotal=String.format("%.2f/-",isubtotal);
         ctax=String.format("%.2f/-",itax);
         ctotal=String.format("%.2f",itotal);
         //String tot=total.getText();
         String ca=cash.getText();
         
         c=Integer.parseInt(ca);
         
         String bal=lbalance.getText();
         int b=Integer.parseInt(bal);
         String paymentM=(String)jComboBox1.getSelectedItem();
         //===========================================================
         itemcost[0]=Double.parseDouble(salad.getText());
         double p1=price_salad*itemcost[0];
         String p11=String.format("%.2f/-",p1);
         
         itemcost[1]=Double.parseDouble(onionrings.getText());
         double p2=price_onionrings*itemcost[1];
         String p21=String.format("%.2f/-",p2);
         
         itemcost[2]=Double.parseDouble(burger.getText());
         double p3=price_burger*itemcost[2];
         String p31=String.format("%.2f/-",p3);
         
         itemcost[3]=Double.parseDouble(pizza.getText());
         double p4=price_pizza*itemcost[3];
         String p41=String.format("%.2f/-",p4);
         
         itemcost[4]=Double.parseDouble(cheeserolls.getText());
         double p5=price_cheeserolls*itemcost[4];
         String p51=String.format("%.2f/-",p5);
         
         itemcost[5]=Double.parseDouble(manchuria.getText());
         double p6=price_manchuria*itemcost[5];
         String p61=String.format("%.2f/-",p6);
         
         itemcost[6]=Double.parseDouble(vegnoodles.getText());
         double p7=price_vegnoodles*itemcost[6];
         String p71=String.format("%.2f/-",p7);
         
         itemcost[7]=Double.parseDouble(chickennoodles.getText());
         double p8=price_chickennoodles*itemcost[7];
         String p81=String.format("%.2f/-",p8);
         
         itemcost[8]=Double.parseDouble(tea.getText());
         double p9=price_tea*itemcost[8];
         String p91=String.format("%.2f/-",p9);
         
         itemcost[9]=Double.parseDouble(cola.getText());
         double p10=price_cola*itemcost[9];
         String p101=String.format("%.2f/-",p10);
         
         itemcost[10]=Double.parseDouble(water.getText());
         double p1111=price_water*itemcost[10];
         String p111=String.format("%.2f/-",p1111);
         
         itemcost[11]=Double.parseDouble(chocolate.getText());
         double p121=price_chocolate*itemcost[11];
         String p1211=String.format("%.2f/-",p121);
         
         itemcost[12]=Double.parseDouble(vanilla.getText());
         double p131=price_vanilla*itemcost[12];
         String p1311=String.format("%.2f/-",p131);
         
        //============================================================
        if(paymentM=="CASH")
            {if(c<itotal)
                {frame3=new JFrame("PAYMENT");
                JOptionPane.showMessageDialog(null,"ENTER ENOUGH CASH FOR PAYMENT","payment",2);
                }
            else
                {billing dum=new billing(bal,unme,csubtotal,ctax,ctotal,(String)jComboBox1.getSelectedItem(),salad.getText(),onionrings.getText(),burger.getText(),pizza.getText(),cheeserolls.getText(),manchuria.getText(),vegnoodles.getText(),chickennoodles.getText(),tea.getText(),cola.getText(),water.getText(),chocolate.getText(),vanilla.getText(),p11,p21,p31,p41,p51,p61,p71,p81,p91,p101,p111,p1211,p1311);
                dum.setVisible(true);
                dum.pack();
                dum.setLocationRelativeTo(null);
                this.dispose();
                }
            }
        // TODO add your handling code here:
         else
         {if(b<itotal)
            {JOptionPane.showMessageDialog(null,"you dont have enough balance!","payment",2);
            }
         else       {
        
            
                    billing dum=new billing(bal,unme,csubtotal,ctax,ctotal,(String)jComboBox1.getSelectedItem(),salad.getText(),onionrings.getText(),burger.getText(),pizza.getText(),cheeserolls.getText(),manchuria.getText(),vegnoodles.getText(),chickennoodles.getText(),tea.getText(),cola.getText(),water.getText(),chocolate.getText(),vanilla.getText(),p11,p21,p31,p41,p51,p61,p71,p81,p91,p101,p111,p1211,p1311);
                    dum.setVisible(true);
                    dum.pack();
                    dum.setLocationRelativeTo(null);
                    this.dispose();
                    }
         }
         
    }//GEN-LAST:event_payActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(dummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(dummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(dummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(dummy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new dummy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField burger;
    private javax.swing.JTextField cash;
    private javax.swing.JCheckBox cburger;
    private javax.swing.JCheckBox ccheeserolls;
    private javax.swing.JCheckBox cchickennoodles;
    private javax.swing.JCheckBox cchocolate;
    private javax.swing.JCheckBox ccola;
    private javax.swing.JTextField change;
    private javax.swing.JTextField cheeserolls;
    private javax.swing.JTextField chickennoodles;
    private javax.swing.JTextField chocolate;
    private javax.swing.JCheckBox cmanchuria;
    private javax.swing.JTextField cola;
    private javax.swing.JCheckBox conionrings;
    private javax.swing.JCheckBox cpizza;
    private javax.swing.JCheckBox csalad;
    private javax.swing.JCheckBox ctea;
    private javax.swing.JCheckBox cvanilla;
    private javax.swing.JCheckBox cvegnoodles;
    private javax.swing.JCheckBox cwater;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbalance;
    private javax.swing.JTextField manchuria;
    private javax.swing.JTextField onionrings;
    private javax.swing.JButton pay;
    private javax.swing.JTextField pizza;
    private javax.swing.JTextField salad;
    private javax.swing.JTextField subtotal;
    private javax.swing.JTextField tax;
    private javax.swing.JTextField tea;
    private javax.swing.JTextField total;
    private javax.swing.JTextField vanilla;
    private javax.swing.JTextField vegnoodles;
    private javax.swing.JTextField water;
    // End of variables declaration//GEN-END:variables
}

